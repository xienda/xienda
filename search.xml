<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/08/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="hello-hexo"><a href="#hello-hexo" class="headerlink" title="hello hexo"></a>hello hexo</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>酒店管理系统</title>
    <url>/2023/09/26/%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Code</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;conio.h&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void welcome() //欢迎 </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	printf(&quot;**************************\n&quot;);</span><br><span class="line">	printf(&quot;*****宾馆客房管理系统*****\n&quot;);</span><br><span class="line">	printf(&quot;**************************\n&quot;);</span><br><span class="line">	printf(&quot;**********功能选择********\n&quot;);</span><br><span class="line">	printf(&quot;        1.查询房间\n&quot;);//</span><br><span class="line">	printf(&quot;        2.入住房间\n&quot;);//</span><br><span class="line">	printf(&quot;        3.修改房间\n&quot;);//</span><br><span class="line">	printf(&quot;        4.房间入住情况\n&quot;);//</span><br><span class="line">	printf(&quot;        5.保存信息\n&quot;);//</span><br><span class="line">	printf(&quot;        6.读取信息\n&quot;);//</span><br><span class="line">	printf(&quot;        7.入住人数\n&quot;);//</span><br><span class="line">	printf(&quot;        8.退出房间\n&quot;);//</span><br><span class="line">	printf(&quot;        0.退出系统\n&quot;);//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">typedef struct _Guest  //结构体 ，宾客信息 </span><br><span class="line">&#123;</span><br><span class="line">	char name[20]; //姓名 </span><br><span class="line">	char sex[20];  //性别 </span><br><span class="line">	int  fanghao;  //房号 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;Guest;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">typedef struct _Node  //链表 </span><br><span class="line">&#123;</span><br><span class="line">	Guest gue; //宾客 </span><br><span class="line">	struct _Node* pNext; //指向下一个节点的指针 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;Node;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Node *g_pHead = NULL;  //头节点 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void  log()  //入住房间   </span><br><span class="line">&#123;</span><br><span class="line">    Node* pNewNode = (Node*)malloc(sizeof(Node)); //建一个新的节点，动态开辟内存 ，malloc返回一个*void指针，需要强转成*Node才能赋给pNewNode </span><br><span class="line">	pNewNode-&gt;pNext = NULL; //将节点指向NULL。</span><br><span class="line">	if (g_pHead == NULL)   //判断该头节点是否为NULL，如果为真，头节点为新创建的节点，如果为假，新节点指向头节点，头节点为新节点。头插法。 </span><br><span class="line">    &#123;</span><br><span class="line">    	g_pHead = pNewNode;</span><br><span class="line">    	</span><br><span class="line">	&#125;</span><br><span class="line">	else                </span><br><span class="line">	&#123;</span><br><span class="line">		</span><br><span class="line">		pNewNode-&gt;pNext = g_pHead;</span><br><span class="line">		g_pHead = pNewNode; </span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;请输入房间号：\n&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;pNewNode-&gt;gue.fanghao);</span><br><span class="line">	</span><br><span class="line">	printf(&quot;请输入性别：\n&quot;);</span><br><span class="line">	scanf(&quot;%s&quot;,pNewNode-&gt;gue.sex);</span><br><span class="line">	</span><br><span class="line">	printf(&quot;请输入姓名：\n&quot;);</span><br><span class="line">	scanf(&quot;%s&quot;,pNewNode-&gt;gue.name);</span><br><span class="line">	</span><br><span class="line">	printf(&quot;房间已入住成功,欢迎您的入住\n&quot;); </span><br><span class="line">	</span><br><span class="line">	system(&quot;pause&quot;); </span><br><span class="line">	system(&quot;cls&quot;); //清屏 </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void PrintRoom()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"> printf(&quot;**************************\n&quot;);</span><br><span class="line"> printf(&quot;*******宾馆客房管理*******\n&quot;); </span><br><span class="line"> printf(&quot;**************************\n&quot;);</span><br><span class="line"> printf(&quot;房间号     性别       姓名\n&quot;);</span><br><span class="line"> printf(&quot;**************************\n&quot;);</span><br><span class="line"> </span><br><span class="line"> //你 </span><br><span class="line"></span><br><span class="line"> Node* p = g_pHead; //从头节点开始 </span><br><span class="line"> while(p!=NULL)   //不为空节点，就一直遍历 </span><br><span class="line"> &#123;</span><br><span class="line"> 	</span><br><span class="line"> printf(&quot;%d         %s        %s\n&quot;,p-&gt;gue.fanghao,p-&gt;gue.sex,p-&gt;gue.name);</span><br><span class="line"> 	</span><br><span class="line"> p = p-&gt;pNext;</span><br><span class="line"> printf(&quot;**************************\n&quot;);</span><br><span class="line"> &#125;</span><br><span class="line">    system(&quot;pause&quot;); </span><br><span class="line">	system(&quot;cls&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void SaveRoom()  //保存信息 </span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	//打开文件</span><br><span class="line">	FILE* fp = fopen(&quot;D:\\dev\\room.dat&quot;,&quot;w+&quot;); </span><br><span class="line">    </span><br><span class="line">    Node* p = g_pHead; //从头节点开始 </span><br><span class="line">    while(p!=NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		fwrite(&amp;p-&gt;gue,1,sizeof(Guest),fp);</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		p = p-&gt;pNext;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	fclose(fp); //关闭文件 </span><br><span class="line">	printf(&quot;数据保存成功\n&quot;); </span><br><span class="line">	system(&quot;pause&quot;); </span><br><span class="line">	system(&quot;cls&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void  ReadGuest()  //加载数据 </span><br><span class="line">&#123;</span><br><span class="line">	//打开文件</span><br><span class="line">	FILE *fp = fopen(&quot;D:\\dev\\room.dat&quot;,&quot;r&quot;); //打开文件 </span><br><span class="line">	if (fp == NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;打开文件失败\n&quot;);</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	Guest Guest;</span><br><span class="line">	while(fread(&amp;Guest,1,sizeof(Guest),fp)) //读取信息 </span><br><span class="line">	&#123;   </span><br><span class="line">	    //创建一个新节点</span><br><span class="line">		Node* pNewNode = (Node*)malloc(sizeof(Node)); </span><br><span class="line">		</span><br><span class="line">		pNewNode-&gt;pNext = NULL;  //指向空 </span><br><span class="line">		</span><br><span class="line">		memcpy(pNewNode,&amp;Guest,sizeof(Guest)); //拷取信息 </span><br><span class="line">	</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		if (g_pHead == NULL) </span><br><span class="line">      &#123;</span><br><span class="line">    	g_pHead = pNewNode;</span><br><span class="line">    	</span><br><span class="line">	  &#125;</span><br><span class="line">	   else</span><br><span class="line">	  &#123;</span><br><span class="line">		</span><br><span class="line">		pNewNode-&gt;pNext = g_pHead;</span><br><span class="line">		g_pHead = pNewNode; </span><br><span class="line">		</span><br><span class="line">	  &#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	fclose(fp);</span><br><span class="line">	printf(&quot;加载数据成功\n&quot;);</span><br><span class="line">	system(&quot;pause&quot;); </span><br><span class="line">	system(&quot;cls&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int Sumguest()</span><br><span class="line">&#123;</span><br><span class="line">	int count = 0;</span><br><span class="line">	//遍历链表</span><br><span class="line">	</span><br><span class="line">	Node* p = g_pHead;</span><br><span class="line">	while(p!=NULL) </span><br><span class="line">	&#123;</span><br><span class="line">		count++;</span><br><span class="line">		p = p-&gt;pNext; </span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	 &#125; </span><br><span class="line">	system(&quot;pause&quot;); </span><br><span class="line">	system(&quot;cls&quot;);</span><br><span class="line">	</span><br><span class="line">	return count;</span><br><span class="line">	</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Node* FindGuest()</span><br><span class="line">&#123;   </span><br><span class="line">    int guest;</span><br><span class="line">    char Name[20];</span><br><span class="line">	printf(&quot;请输入查询的房间:\n&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;guest);</span><br><span class="line">	</span><br><span class="line">	Node* p = g_pHead;</span><br><span class="line">	while(p != NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		if (p-&gt;gue.fanghao == guest)</span><br><span class="line">		&#123;</span><br><span class="line">			</span><br><span class="line">			return p;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		p = p-&gt;pNext;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	return NULL;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void ModifyRoom()</span><br><span class="line">&#123;</span><br><span class="line">	int fanghao;</span><br><span class="line">	printf(&quot;请输入要修改的房间号：\n&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;fanghao);</span><br><span class="line">	</span><br><span class="line">	Node* p = g_pHead;</span><br><span class="line">	while(p != NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		</span><br><span class="line">		if (p-&gt;gue.fanghao == fanghao)</span><br><span class="line">		&#123;	</span><br><span class="line">			printf(&quot;请输入要修改的宾客 姓名 性别： \n&quot;);</span><br><span class="line">			scanf(&quot;%s %s&quot;,p-&gt;gue.name,p-&gt;gue.sex);</span><br><span class="line">		    printf(&quot;修改成功&quot;);</span><br><span class="line">		    break; </span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		p = p-&gt;pNext;</span><br><span class="line">	&#125;</span><br><span class="line">	if (p == NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;没有找到该学生信息。\n&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	system(&quot;pause&quot;); </span><br><span class="line">	system(&quot;cls&quot;);</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line">void deleteguest()</span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	int fanghao;</span><br><span class="line">	printf(&quot;请输入要退房的房间号:\n&quot;);</span><br><span class="line">	</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;fanghao);</span><br><span class="line">	</span><br><span class="line">	Node* p1,*p2;</span><br><span class="line">    </span><br><span class="line">	if(g_pHead-&gt;gue.fanghao == fanghao)	</span><br><span class="line">	&#123;</span><br><span class="line">		p1 = g_pHead;</span><br><span class="line">		g_pHead = g_pHead-&gt;pNext;</span><br><span class="line">		free(p1);</span><br><span class="line">		return;</span><br><span class="line">	&#125;</span><br><span class="line">	Node* p = g_pHead;</span><br><span class="line"></span><br><span class="line">	while(p-&gt;pNext != NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		if (p-&gt;pNext-&gt;gue.fanghao == fanghao)</span><br><span class="line">		&#123;</span><br><span class="line">			p2 = p-&gt;pNext;</span><br><span class="line">			p-&gt;pNext = p-&gt;pNext-&gt;pNext;</span><br><span class="line">			free(p2 );</span><br><span class="line">		system(&quot;pause&quot;); </span><br><span class="line">	    system(&quot;cls&quot;);</span><br><span class="line">		</span><br><span class="line">			return ; </span><br><span class="line">		&#125;</span><br><span class="line">		p = p-&gt;pNext; </span><br><span class="line">		</span><br><span class="line">		if (p-&gt;pNext == NULL)</span><br><span class="line">		&#123;</span><br><span class="line">			break;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	if (p-&gt;pNext == NULL)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;没有找到该客人&quot;);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">		system(&quot;pause&quot;); </span><br><span class="line">	    system(&quot;cls&quot;);</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	while (1)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		welcome();</span><br><span class="line"></span><br><span class="line">		char ch = getch();</span><br><span class="line">		switch (ch)</span><br><span class="line">		&#123;</span><br><span class="line">		case&#x27;1&#x27;: //查询房间</span><br><span class="line">		 &#123;</span><br><span class="line">		 Node* p = FindGuest();</span><br><span class="line">		 if (p!=NULL)</span><br><span class="line">		 &#123;</span><br><span class="line">		 	printf(&quot;性别：%s 姓名：%s\n&quot;,p-&gt;gue.sex,p-&gt;gue.name);</span><br><span class="line">		 &#125;</span><br><span class="line">		 else</span><br><span class="line">		    printf(&quot;没有该客人\n&quot;);</span><br><span class="line">		system(&quot;pause&quot;); </span><br><span class="line">	    system(&quot;cls&quot;);</span><br><span class="line">			break;&#125;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">					</span><br><span class="line">		case&#x27;2&#x27;: //入住房间</span><br><span class="line">			log();</span><br><span class="line">			break;</span><br><span class="line">		case&#x27;3&#x27;: //修改房间</span><br><span class="line">			ModifyRoom();</span><br><span class="line">			break;	</span><br><span class="line">		case&#x27;4&#x27;: </span><br><span class="line">		 PrintRoom(); //房间入住情况 </span><br><span class="line">			break;</span><br><span class="line">			</span><br><span class="line">		case&#x27;5&#x27;: //保存信息 </span><br><span class="line">		 SaveRoom();</span><br><span class="line">			break;</span><br><span class="line">				</span><br><span class="line">		case&#x27;6&#x27;: //读取信息 </span><br><span class="line">		  ReadGuest();</span><br><span class="line">			break;</span><br><span class="line">		</span><br><span class="line">		case&#x27;7&#x27;: //入住人数 </span><br><span class="line">		  printf(&quot;入住总人数：%d\n&quot;,Sumguest());</span><br><span class="line">		    break;	</span><br><span class="line">			</span><br><span class="line">		case&#x27;8&#x27;: //退出房间 </span><br><span class="line">		 deleteguest();</span><br><span class="line">		    break;</span><br><span class="line">				</span><br><span class="line">		case&#x27;0&#x27;: //退出系统</span><br><span class="line">		    printf(&quot;再见\n&quot;); </span><br><span class="line">			return 0;</span><br><span class="line">        default:</span><br><span class="line">        	printf(&quot;您的输入有问题，请重新输入\n&quot;);</span><br><span class="line">        	system(&quot;pause&quot;);</span><br><span class="line">        	system(&quot;cls&quot;);</span><br><span class="line">        	break;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		getchar();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
        <tag>系统</tag>
      </tags>
  </entry>
</search>
